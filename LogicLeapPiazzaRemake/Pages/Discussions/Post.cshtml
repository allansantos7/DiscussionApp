@page "{id}"
@using Utility
@model LogicLeapPiazzaRemake.Pages.Discussions.PostModel
@{
    ViewData["Title"] = "View Post";
}
<div>
    <div class="card post-display me-4">
        <div class="card-body me-4">
            <div class="d-flex justify-content-between">

            <h4 class="card-title">@Model.objPost.PostTitle</h4>
                <form method="post" asp-page-handler="SavePost">
                    <button type="submit" class="btn btn-link text-white p-0" title="Save Post"><i class="fas fa-bookmark px-1 text-end"></i></button>
                    <input type="hidden" name="Id" value="@Model.Id" />
                </form>
            </div>
            <h6 class="card-subtitle mb-2 text-muted">Author: @Model.author.FullName</h6>
            <p>@Model.objPost.Created</p>
                <hr />
            <p class="card-text">@Html.Raw(@Model.objPost.PostDesc)</p>
            @if (ViewData["MyAttachment"] != null)
            {
                <div><img src='@ViewData["MyAttachment"]' class="img-responsive" style="max-width: 50em"/></div>
            }
            <span class="badge bg-success text-center">@Model.folder.Name</span>
            <div class="text-end post-icons align-items-center">
                <form id="LikePost" method="post" style="float: left;">
                    <input hidden id="PostId" name="PostId" value="@Model.objPost.Id" />
                    <input hidden id="LikePost" name="LikePost" value="true" />
                    <p class="p-1"><button type="submit" id="LikePost" class="btn btn-link text-white"><i class="fas fa-thumbs-up"></i></button>@Model._unitOfWork.PostAward.GetAll(c => c.PostId == Model.objPost.Id && c.AwardId == 2).Count()</p>
                </form>
                <div class="d-flex justify-content-end align-items-center">

                    @if (Model.objPost.StatusId == 1)
                    {
                        <a type="button" data-bs-toggle="modal" data-bs-target="#commentModal" class="text-white" title="Reply to Post"><i class="fas fa-reply"></i></a>
                    }

                    @if (User.IsInRole(SD.InstructorRole) || User.Identity.Name == Model.author.UserName)
                    {
                        <i class="fas fa-edit btn btn-link text-white p-0" onclick="openEditModal()" title="Edit Post"></i>
                        @if (Model.objPost.StatusId != 5)
                        {
                            <form method="post" asp-page-handler="DeletePost">
                                <input type="hidden" name="Id" value="@Model.Id" /> <!-- Pass the post ID -->
                                <button type="submit" class="btn btn-link text-white p-0"><i class="fas fa-trash p-0" title="Delete Post"></i></button>
                            </form>
                        }

                          @*<form method="post" asp-page-handler="ResolveIssue">
                            <button type="submit" class="btn btn-success" name="resolution" value="answeredByInstructor">Answered by Instructor</button>
                            <button type="submit" class="btn btn-success" name="resolution" value="answeredByStudent">Answered by Student</button>
                            </form>

                            <form id="DeletePost" method="post">
                            <input hidden id="PostId" name="PostId" value="@Model.objPost.Id" />
                            <input hidden id="DeletePost" name="DeletePost" value="true" />
                            <button type="submit" id="DeletePost" class="btn btn-link text-white p-0"><i class="fas fa-trash p-0" title="Delete Post"></i></button>
                        </form>*@
                        @if (Model.objPost.StatusId == 1)
                        {
                            <button type="button" class="btn btn-link text-white p-0" data-bs-toggle="modal" data-bs-target="#resolveModal" title="Mark as Resolved">
                                <i class="fas fa-check"></i>
                            </button>
                        }
                    }
                    @if (User.IsInRole(SD.InstructorRole))
                    {
                        <i class="fas fa-stamp btn btn-link text-white p-0" title="Endorse Post"></i>
                    }
                </div>

                @if (Model.objPost.StatusId == 2)
                {
                    <p>Post is Closed</p>
                }
                @if (Model.objPost.StatusId == 3)
                {
                    <p>Post was answered by student</p>
                }
                @if (Model.objPost.StatusId == 4)
                {
                    <p>Post was answered by instructor</p>
                }
                @if (Model.objPost.StatusId == 5)
                {
                    <p>Post was ARCHIVED</p>
                }

            </div>

        </div>
    </div>
    

    <div id="resolveModal" class="modal fade" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Resolve Issue</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Has the issue been resolved?</p>
                    <div class="btn-group">
                        <form method="post" asp-page-handler="ResolveIssue">
                            <button type="submit" class="btn btn-success" name="resolution" value="answeredByInstructor">Answered by Instructor</button>
                            <button type="submit" class="btn btn-success" name="resolution" value="answeredByStudent">Answered by Student</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Post Modal -->
    <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel">Edit Post</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Edit Post Form -->
                    <form method="post" asp-page-handler="EditPost" id="editForm">
                        <div class="form-group">
                            <label for="postTitle">Post Title:</label>
                            <input type="text" class="form-control" id="postTitle" name="postTitle" value="@Model.objPost.PostTitle">
                        </div>
                        <div class="form-group">
                            <label for="postDesc">Post Description:</label>
                            <textarea class="form-control" id="postDesc" name="postDesc" rows="4">@Model.objPost.PostDesc</textarea>
                        </div>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    
    @foreach (var comment in Model.objCommentList.Where(c => c.PostId == Model.objPost.Id))
    {

        <!-- Display each comment -->
        <div class="post-comment-display">
            <div class="alert alert-dismissible alert-secondary">
                <div id="commentContent" class="">
                    <p>@Html.Raw(comment.Note)</p>
                </div>
                <div class="d-flex justify-content-between align-content-center">
                    <div>
                        <form id="LikeComment" method="post" style="float: left;">
                            <input hidden id="CommentId" name="CommentId" value="@comment.Id" />
                            <input hidden id="LikeComment" name="LikeComment" value="true" />
                            <button type="submit" id="LikeComment" class="btn text-white p-0"><i class="fas fa-thumbs-up pe-1"></i>@Model._unitOfWork.CommentAward.GetAll(c => c.CommentId == comment.Id && c.AwardId == 2).Count()</button>
                        </form>
                    </div>
                    <div>
                        @if (User.IsInRole(SD.InstructorRole) || User.Identity.Name == Model.author.UserName)
                        {
                            <div class="d-flex justify-content-end align-content-center">
                                <i class="fas fa-edit btn text-white p-1 align-content-center"></i>
                                
                                <form id="DeleteComment" method="post" class="btn text-white p-1">
                                    <input hidden id="CommentId" name="CommentId" value="@comment.Id" />
                                    <input hidden id="DeleteComment" name="DeleteComment" value="true" />
                                    <button type="submit" id="DeleteComment" class="btn btn-link text-white"><i class="fas fa-trash"></i></button>
                                </form>
                            </div>

                        }
                        @if (User.IsInRole(SD.InstructorRole))
                        {
                            <form id="EndorseComment" method="post" style="float: left;">
                                <input hidden id="CommentId" name="CommentId" value="@comment.Id" />
                                <input hidden id="EndorseComment" name="EndorseComment" value="true" />
                                <button type="submit" id="EndorseComment" class="btn text-white p-0" title="Endorse Post"><i class="fas fa-stamp pe-1"></i>@Model._unitOfWork.CommentAward.GetAll(c => c.CommentId == comment.Id && c.AwardId == 1).Count()</button>
                            </form>
                        }
                    </div>

                </div>
                

            </div>
        </div>

        <div>
            
        </div>
    }



    





    <div id="commentModal" class="modal fade" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5>Comment</h5>
                </div>
                <div class="modal-body">
                    <form method="post">
                        <div class="mb-3">
                            <textarea class="form-control tinyContent" id="commentNote" name="commentNote" rows="3"></textarea>
                        </div>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script>
        document.addEventListener('focusin', (e) => {
            if (e.target.closest(".tox-tinymce-aux, .moxman-window, .tam-assetmanager-root") !== null) {
                e.stopImmediatePropagation();
            }
        });
        tinymce.init({
            selector: 'textarea',
            plugins: 'link',
            toolbar: 'link',
            link_assume_external_targets: true
            });
        // Check if TempData contains a toast message and show it using Toastr
        $(document).ready(function () {
            var toastMessage = '@TempData["ToastMessage"]';

            if (toastMessage !== '') {
                toastr.info(toastMessage);
            }
        });
    </script>
    <script>
        function openEditModal() {
            $('#editModal').modal('show');
        }
        </script>
    <script>
        function deletePost() {
            var postId = '@Model.objPost.Id'; // Get the post ID from the model
            var confirmation = confirm("Are you sure you want to delete this post?");

            if (confirmation) {
                // Call the UpdatePostStatus method with status 5 for deletion
                fetch(`/Discussions/Post?handler=UpdatePostStatus&status=5&postId=${postId}`, {
                    method: 'POST'
                })
                    .then(response => {
                        if (response.ok) {
                            // Post deleted successfully, redirect to the discussions page
                            window.location.href = '/Discussions';
                        } else {
                            // Handle error cases
                            console.error('Error deleting post:', response);
                            alert('An error occurred while deleting the post. Please try again later.');
                        }
                    })
                    .catch(error => {
                        console.error('Error deleting post:', error);
                        alert('An error occurred while deleting the post. Please try again later.');
                    });
            }
        }
    </script>
}

